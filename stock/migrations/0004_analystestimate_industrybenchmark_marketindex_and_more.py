# Generated by Django 4.2.24 on 2025-09-28 03:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stock', '0003_alter_advancedindicator_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalystEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_year', models.IntegerField(verbose_name='予想対象年度')),
                ('revenue_estimate', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='売上予想')),
                ('operating_estimate', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='営業利益予想')),
                ('net_estimate', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='純利益予想')),
                ('eps_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='EPS予想')),
                ('target_price_high', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='目標株価上限')),
                ('target_price_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='目標株価平均')),
                ('target_price_low', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='目標株価下限')),
                ('rating_buy', models.IntegerField(default=0, verbose_name='買い推奨数')),
                ('rating_hold', models.IntegerField(default=0, verbose_name='ホールド数')),
                ('rating_sell', models.IntegerField(default=0, verbose_name='売り推奨数')),
                ('analyst_count', models.IntegerField(default=0, verbose_name='アナリスト数')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最終更新')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['stock', '-target_year'],
            },
        ),
        migrations.CreateModel(
            name='IndustryBenchmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(db_index=True, max_length=100, verbose_name='業種')),
                ('date', models.DateField(db_index=True, verbose_name='データ日付')),
                ('avg_per', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均PER')),
                ('avg_pbr', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均PBR')),
                ('avg_roe', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均ROE')),
                ('avg_roa', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均ROA')),
                ('avg_dividend_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='平均配当利回り')),
                ('avg_debt_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均負債比率')),
                ('median_per', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='中央値PER')),
                ('median_pbr', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='中央値PBR')),
                ('median_roe', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='中央値ROE')),
                ('avg_revenue_growth', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均売上成長率')),
                ('avg_profit_growth', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='平均利益成長率')),
                ('sample_count', models.IntegerField(default=0, verbose_name='サンプル数')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sector', '-date'],
            },
        ),
        migrations.CreateModel(
            name='MarketIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_name', models.CharField(choices=[('nikkei225', '日経平均'), ('topix', 'TOPIX'), ('mothers', 'マザーズ指数'), ('jasdaq', 'JASDAQ指数'), ('jpx400', 'JPX日経400')], db_index=True, max_length=20, verbose_name='指数名')),
                ('date', models.DateField(db_index=True, verbose_name='日付')),
                ('open_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='始値')),
                ('high_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='高値')),
                ('low_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='安値')),
                ('close_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='終値')),
                ('change_points', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='前日比ポイント')),
                ('change_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='前日比率(%)')),
                ('volume', models.BigIntegerField(blank=True, null=True, verbose_name='出来高')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['index_name', '-date'],
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('price_above', '価格上昇'), ('price_below', '価格下落'), ('volume_spike', '出来高急増'), ('per_change', 'PER変化'), ('rating_change', 'レーティング変更'), ('earnings_surprise', '決算サプライズ')], max_length=20, verbose_name='アラート種類')),
                ('trigger_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='発火値')),
                ('condition_data', models.JSONField(default=dict, verbose_name='条件データ')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('last_triggered', models.DateTimeField(blank=True, null=True, verbose_name='最終発火日時')),
                ('trigger_count', models.IntegerField(default=0, verbose_name='発火回数')),
                ('email_notification', models.BooleanField(default=True, verbose_name='メール通知')),
                ('app_notification', models.BooleanField(default=True, verbose_name='アプリ通知')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['user', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='分析日')),
                ('ma_5', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='5日移動平均')),
                ('ma_25', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='25日移動平均')),
                ('ma_75', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='75日移動平均')),
                ('ma_200', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='200日移動平均')),
                ('rsi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='RSI')),
                ('macd', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='MACD')),
                ('macd_signal', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='MACDシグナル')),
                ('stochastic_k', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='ストキャスティクス%K')),
                ('bb_upper', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ボリンジャー上限')),
                ('bb_middle', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ボリンジャー中央')),
                ('bb_lower', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ボリンジャー下限')),
                ('volatility', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True, verbose_name='ボラティリティ')),
                ('momentum_1d', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='1日モメンタム')),
                ('momentum_5d', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='5日モメンタム')),
                ('momentum_20d', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='20日モメンタム')),
                ('trend', models.CharField(blank=True, max_length=50, verbose_name='トレンド')),
                ('support_level', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='サポートレベル')),
                ('resistance_level', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='レジスタンスレベル')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ウォッチリスト名')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('is_default', models.BooleanField(default=False, verbose_name='デフォルト')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['user', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='目標価格')),
                ('stop_loss_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ストップロス価格')),
                ('notes', models.TextField(blank=True, verbose_name='メモ')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['watchlist', 'added_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='financial',
            options={'ordering': ['stock', '-year', '-quarter'], 'verbose_name': '財務データ', 'verbose_name_plural': '財務データ'},
        ),
        migrations.AlterUniqueTogether(
            name='financial',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='advancedindicator',
            name='psr',
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='ev_sales',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='EV/Sales'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='gross_margin',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='売上総利益率(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='interest_coverage',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='インタレストカバレッジ'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='net_cagr_3y',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='純利益CAGR3年(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='net_growth_1y',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='純利益成長率1年(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='net_margin',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='純利益率(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='operating_cagr_3y',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='営業利益CAGR3年(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='operating_growth_1y',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='営業利益成長率1年(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='operating_margin',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='営業利益率(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='peg_ratio',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='PEGレシオ'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='quick_ratio',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='当座比率'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='receivables_turnover',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='売掛金回転率'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='revenue_cagr_3y',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='売上CAGR3年(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='revenue_growth_1y',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='売上成長率1年(%)'),
        ),
        migrations.AddField(
            model_name='advancedindicator',
            name='roe_3y_avg',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='ROE3年平均(%)'),
        ),
        migrations.AddField(
            model_name='financial',
            name='bps',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='BPS'),
        ),
        migrations.AddField(
            model_name='financial',
            name='dividend_per_share',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='1株配当'),
        ),
        migrations.AddField(
            model_name='financial',
            name='financing_cf',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='財務CF'),
        ),
        migrations.AddField(
            model_name='financial',
            name='investing_cf',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='投資CF'),
        ),
        migrations.AddField(
            model_name='financial',
            name='operating_cf',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='営業CF'),
        ),
        migrations.AddField(
            model_name='financial',
            name='operating_income',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='営業利益'),
        ),
        migrations.AddField(
            model_name='financial',
            name='ordinary_income',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='経常利益'),
        ),
        migrations.AddField(
            model_name='financial',
            name='quarter',
            field=models.IntegerField(blank=True, choices=[(1, 'Q1'), (2, 'Q2'), (3, 'Q3'), (4, 'Q4')], null=True, verbose_name='四半期'),
        ),
        migrations.AddField(
            model_name='financial',
            name='shareholders_equity',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='株主資本'),
        ),
        migrations.AddField(
            model_name='financial',
            name='total_assets',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='総資産'),
        ),
        migrations.AddField(
            model_name='financial',
            name='total_debt',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True, verbose_name='有利子負債'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='market_cap',
            field=models.DecimalField(blank=True, decimal_places=0, max_digits=15, null=True, verbose_name='時価総額'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='payout_ratio',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='配当性向(%)'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='pcfr',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='PCFR'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='psr',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='PSR'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='volume',
            field=models.BigIntegerField(blank=True, null=True, verbose_name='出来高'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='volume_avg_20d',
            field=models.BigIntegerField(blank=True, null=True, verbose_name='20日平均出来高'),
        ),
        migrations.AddField(
            model_name='stock',
            name='data_quality_score',
            field=models.IntegerField(default=0, verbose_name='データ品質スコア'),
        ),
        migrations.AddField(
            model_name='stock',
            name='employees',
            field=models.IntegerField(blank=True, null=True, verbose_name='従業員数'),
        ),
        migrations.AddField(
            model_name='stock',
            name='founded_year',
            field=models.IntegerField(blank=True, null=True, verbose_name='設立年'),
        ),
        migrations.AddField(
            model_name='stock',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='アクティブ'),
        ),
        migrations.AddField(
            model_name='stock',
            name='listing_date',
            field=models.DateField(blank=True, null=True, verbose_name='上場日'),
        ),
        migrations.AddField(
            model_name='stock',
            name='size_category',
            field=models.CharField(blank=True, choices=[('large', '大型株'), ('mid', '中型株'), ('small', '小型株'), ('micro', '超小型株')], max_length=20, verbose_name='規模分類'),
        ),
        migrations.AlterField(
            model_name='advancedindicator',
            name='date',
            field=models.DateField(db_index=True, verbose_name='取得日'),
        ),
        migrations.AlterField(
            model_name='advancedindicator',
            name='equity_ratio',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='自己資本比率(%)'),
        ),
        migrations.AlterField(
            model_name='advancedindicator',
            name='roa',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='ROA(%)'),
        ),
        migrations.AlterField(
            model_name='advancedindicator',
            name='roe',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='ROE(%)'),
        ),
        migrations.AlterField(
            model_name='advancedindicator',
            name='roic',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='ROIC(%)'),
        ),
        migrations.AlterField(
            model_name='financial',
            name='year',
            field=models.IntegerField(db_index=True, verbose_name='決算年度'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='date',
            field=models.DateField(db_index=True, verbose_name='取得日'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='code',
            field=models.CharField(db_index=True, max_length=10, unique=True, verbose_name='銘柄コード'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='market',
            field=models.CharField(blank=True, db_index=True, max_length=50, verbose_name='市場区分'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='name',
            field=models.CharField(db_index=True, max_length=200, verbose_name='企業名'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='sector',
            field=models.CharField(blank=True, db_index=True, max_length=100, verbose_name='業種'),
        ),
        migrations.AlterUniqueTogether(
            name='financial',
            unique_together={('stock', 'year', 'quarter')},
        ),
        migrations.AddIndex(
            model_name='advancedindicator',
            index=models.Index(fields=['stock', 'date'], name='stock_advan_stock_i_939be1_idx'),
        ),
        migrations.AddIndex(
            model_name='advancedindicator',
            index=models.Index(fields=['roe'], name='stock_advan_roe_61fb4b_idx'),
        ),
        migrations.AddIndex(
            model_name='advancedindicator',
            index=models.Index(fields=['roa'], name='stock_advan_roa_97445b_idx'),
        ),
        migrations.AddIndex(
            model_name='advancedindicator',
            index=models.Index(fields=['peg_ratio'], name='stock_advan_peg_rat_b1b59b_idx'),
        ),
        migrations.AddIndex(
            model_name='financial',
            index=models.Index(fields=['stock', 'year'], name='stock_finan_stock_i_ac3adf_idx'),
        ),
        migrations.AddIndex(
            model_name='financial',
            index=models.Index(fields=['year'], name='stock_finan_year_2ee90b_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['stock', 'date'], name='stock_indic_stock_i_7bc4c7_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['date'], name='stock_indic_date_c14298_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['code'], name='stock_stock_code_21af0a_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['sector'], name='stock_stock_sector_f7358f_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['market'], name='stock_stock_market_987180_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['size_category'], name='stock_stock_size_ca_ccd514_idx'),
        ),
        migrations.AddField(
            model_name='watchlistitem',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.stock'),
        ),
        migrations.AddField(
            model_name='watchlistitem',
            name='watchlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stock.userwatchlist'),
        ),
        migrations.AddField(
            model_name='userwatchlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlists', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='technicalindicator',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_indicators', to='stock.stock'),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.stock'),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='marketindex',
            index=models.Index(fields=['index_name', 'date'], name='stock_marke_index_n_0a9740_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='marketindex',
            unique_together={('index_name', 'date')},
        ),
        migrations.AddIndex(
            model_name='industrybenchmark',
            index=models.Index(fields=['sector', 'date'], name='stock_indus_sector_ff6d9d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='industrybenchmark',
            unique_together={('sector', 'date')},
        ),
        migrations.AddField(
            model_name='analystestimate',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyst_estimates', to='stock.stock'),
        ),
        migrations.AlterUniqueTogether(
            name='watchlistitem',
            unique_together={('watchlist', 'stock')},
        ),
        migrations.AlterUniqueTogether(
            name='userwatchlist',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='technicalindicator',
            index=models.Index(fields=['stock', 'date'], name='stock_techn_stock_i_f8f0cd_idx'),
        ),
        migrations.AddIndex(
            model_name='technicalindicator',
            index=models.Index(fields=['rsi'], name='stock_techn_rsi_47266c_idx'),
        ),
        migrations.AddIndex(
            model_name='technicalindicator',
            index=models.Index(fields=['trend'], name='stock_techn_trend_b8ba45_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='technicalindicator',
            unique_together={('stock', 'date')},
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['user', 'is_active'], name='stock_stock_user_id_6c5f68_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['stock', 'alert_type'], name='stock_stock_stock_i_d63663_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='analystestimate',
            unique_together={('stock', 'target_year')},
        ),
    ]
